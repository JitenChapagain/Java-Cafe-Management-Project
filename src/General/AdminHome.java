
package General;

import Utilities.UserRegistrationInfo;
import java.io.IOException;
import java.util.logging.Level;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class AdminHome extends javax.swing.JFrame {

    UserRegistrationInfo mgr = new UserRegistrationInfo();
    
    public AdminHome(String userID, String userPassword) {
        initComponents();
        setTitle("APU Cafeteria Ordering System");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setVisible(true);
        setLocationRelativeTo(null);
        
        // Set the user ID
        mgr.setUserID(userID);
        mgr.setUserPassword(userPassword);
        userIDTF.setText(userID);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userDisplayLabel1 = new javax.swing.JLabel();
        userIDTF = new javax.swing.JLabel();
        adminHomeHeader = new javax.swing.JLabel();
        adminUpdateMenuBtn = new javax.swing.JButton();
        adminOrderHistoryBtn = new javax.swing.JButton();
        adminManageOrderBtn = new javax.swing.JButton();
        adminProfileBtn = new javax.swing.JButton();
        adminSalesReportBtn = new javax.swing.JButton();
        adminFeedbackBtn = new javax.swing.JButton();
        adminAccountApprovalBtn = new javax.swing.JButton();
        adminAuditLogBtn = new javax.swing.JButton();
        adminLogoutBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        userDisplayLabel1.setBackground(new java.awt.Color(18, 18, 18));
        userDisplayLabel1.setFont(new java.awt.Font("SF Pro Text", 1, 24)); // NOI18N
        userDisplayLabel1.setForeground(new java.awt.Color(242, 242, 242));
        userDisplayLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userDisplayLabel1.setText("USER ID");
        getContentPane().add(userDisplayLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 120, 40));

        userIDTF.setBackground(new java.awt.Color(18, 18, 18));
        userIDTF.setFont(new java.awt.Font("SF Pro Text", 1, 18)); // NOI18N
        userIDTF.setForeground(new java.awt.Color(242, 242, 242));
        userIDTF.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userIDTF.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        getContentPane().add(userIDTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 48, 120, 70));

        adminHomeHeader.setFont(new java.awt.Font("SF Pro Text", 1, 48)); // NOI18N
        adminHomeHeader.setForeground(new java.awt.Color(242, 242, 242));
        adminHomeHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        adminHomeHeader.setText("ADMIN HOME");
        adminHomeHeader.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        adminHomeHeader.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(adminHomeHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 744, 104));

        adminUpdateMenuBtn.setBackground(new java.awt.Color(0, 48, 73));
        adminUpdateMenuBtn.setFont(new java.awt.Font("SF Pro Text", 1, 24)); // NOI18N
        adminUpdateMenuBtn.setForeground(new java.awt.Color(255, 255, 255));
        adminUpdateMenuBtn.setText("Update Menu");
        adminUpdateMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminUpdateMenuBtnActionPerformed(evt);
            }
        });
        getContentPane().add(adminUpdateMenuBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 191, 195, 99));

        adminOrderHistoryBtn.setBackground(new java.awt.Color(0, 48, 73));
        adminOrderHistoryBtn.setFont(new java.awt.Font("SF Pro Text", 1, 24)); // NOI18N
        adminOrderHistoryBtn.setForeground(new java.awt.Color(255, 255, 255));
        adminOrderHistoryBtn.setText("Order History");
        adminOrderHistoryBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        adminOrderHistoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminOrderHistoryBtnActionPerformed(evt);
            }
        });
        getContentPane().add(adminOrderHistoryBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(328, 191, 242, 99));

        adminManageOrderBtn.setBackground(new java.awt.Color(0, 48, 73));
        adminManageOrderBtn.setFont(new java.awt.Font("SF Pro Text", 1, 24)); // NOI18N
        adminManageOrderBtn.setForeground(new java.awt.Color(255, 255, 255));
        adminManageOrderBtn.setText("Manage Order");
        adminManageOrderBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        adminManageOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminManageOrderBtnActionPerformed(evt);
            }
        });
        getContentPane().add(adminManageOrderBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 191, 221, 99));

        adminProfileBtn.setBackground(new java.awt.Color(0, 48, 73));
        adminProfileBtn.setFont(new java.awt.Font("SF Pro Text", 1, 24)); // NOI18N
        adminProfileBtn.setForeground(new java.awt.Color(255, 255, 255));
        adminProfileBtn.setText("Profile");
        adminProfileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminProfileBtnActionPerformed(evt);
            }
        });
        getContentPane().add(adminProfileBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 342, 204, 95));

        adminSalesReportBtn.setBackground(new java.awt.Color(0, 48, 73));
        adminSalesReportBtn.setFont(new java.awt.Font("SF Pro Text", 1, 24)); // NOI18N
        adminSalesReportBtn.setForeground(new java.awt.Color(255, 255, 255));
        adminSalesReportBtn.setText("Sales Report");
        adminSalesReportBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        adminSalesReportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminSalesReportBtnActionPerformed(evt);
            }
        });
        getContentPane().add(adminSalesReportBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(328, 342, 242, 95));

        adminFeedbackBtn.setBackground(new java.awt.Color(0, 48, 73));
        adminFeedbackBtn.setFont(new java.awt.Font("SF Pro Text", 1, 24)); // NOI18N
        adminFeedbackBtn.setForeground(new java.awt.Color(255, 255, 255));
        adminFeedbackBtn.setText("Feedback");
        adminFeedbackBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        adminFeedbackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminFeedbackBtnActionPerformed(evt);
            }
        });
        getContentPane().add(adminFeedbackBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 342, 220, 100));

        adminAccountApprovalBtn.setBackground(new java.awt.Color(0, 48, 73));
        adminAccountApprovalBtn.setFont(new java.awt.Font("SF Pro Text", 1, 24)); // NOI18N
        adminAccountApprovalBtn.setForeground(new java.awt.Color(255, 255, 255));
        adminAccountApprovalBtn.setText("Account Approval");
        adminAccountApprovalBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        adminAccountApprovalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminAccountApprovalBtnActionPerformed(evt);
            }
        });
        getContentPane().add(adminAccountApprovalBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 490, -1, 94));

        adminAuditLogBtn.setBackground(new java.awt.Color(0, 48, 73));
        adminAuditLogBtn.setFont(new java.awt.Font("SF Pro Text", 1, 24)); // NOI18N
        adminAuditLogBtn.setForeground(new java.awt.Color(255, 255, 255));
        adminAuditLogBtn.setText("Audit Log");
        adminAuditLogBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        adminAuditLogBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminAuditLogBtnActionPerformed(evt);
            }
        });
        getContentPane().add(adminAuditLogBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 490, 257, 94));

        adminLogoutBtn.setBackground(new java.awt.Color(0, 48, 73));
        adminLogoutBtn.setFont(new java.awt.Font("SF Pro Text", 1, 14)); // NOI18N
        adminLogoutBtn.setForeground(new java.awt.Color(255, 255, 255));
        adminLogoutBtn.setText("LOGOUT");
        adminLogoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminLogoutBtnActionPerformed(evt);
            }
        });
        getContentPane().add(adminLogoutBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(895, 624, 95, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/General/coffee final.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 680));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void adminUpdateMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminUpdateMenuBtnActionPerformed
        ManagerMenu mgrMenu = new ManagerMenu(mgr.getUserID(), mgr.getUserPassword());
        mgrMenu.setVisible(true);
        this.dispose();
        try {
            Logger.info("AdminHome","Manager " + mgr.getUserID() + " has attempted to view Manager Menu page.");
        } catch (IOException ex) {
            java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_adminUpdateMenuBtnActionPerformed

    private void adminOrderHistoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminOrderHistoryBtnActionPerformed
        ManagerOrderHistory mgrOrderHistory = new ManagerOrderHistory(mgr.getUserID(), mgr.getUserPassword());
        mgrOrderHistory.setVisible(true);
        this.dispose();
        try {
            Logger.info("AdminHome","Manager " + mgr.getUserID() + " has attempted to view Manager Order History page.");
        } catch (IOException ex) {
            java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_adminOrderHistoryBtnActionPerformed

    private void adminManageOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminManageOrderBtnActionPerformed
        try {                                                    
            ManagerManageOrder mgrManageOrder = new ManagerManageOrder(mgr.getUserID(), mgr.getUserPassword());
            mgrManageOrder.setVisible(true);
            this.dispose();
            try {
                Logger.info("AdminHome","Manager " + mgr.getUserID() + " has attempted to view Manager Manage Order page.");
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException ex) {
            java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_adminManageOrderBtnActionPerformed

    private void adminProfileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminProfileBtnActionPerformed
        try {                                                
            ManagerProfile mgrProfile = new ManagerProfile(mgr.getUserID(), mgr.getUserPassword());
            mgrProfile.setVisible(true);
            this.dispose();
            try {
                Logger.info("AdminHome","Manager " + mgr.getUserID() + " has attempted to view Manager Profile page.");
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException ex) {
            java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_adminProfileBtnActionPerformed

    private void adminSalesReportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminSalesReportBtnActionPerformed
        ManagerSalesReport mgrSalesReport;
        try {
            mgrSalesReport = new ManagerSalesReport(mgr.getUserID(), mgr.getUserPassword());
            mgrSalesReport.setVisible(true);
        } catch (IOException ex) {
            java.util.logging.Logger.getLogger(ManagerHome.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
        try {
            Logger.info("AdminHome","Manager " + mgr.getUserID() + " has attempted to view Manager Sales Report page.");
        } catch (IOException ex) {
            java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_adminSalesReportBtnActionPerformed

    private void adminFeedbackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminFeedbackBtnActionPerformed
        try {                                                 
            ManagerFeedback mgrFeedback = new ManagerFeedback(mgr.getUserID(), mgr.getUserPassword());
            mgrFeedback.setVisible(true);
            this.dispose();
            try {
                Logger.info("AdminHome","Manager " + mgr.getUserID() + " has attempted to view Manager Feedback page.");
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException ex) {
            java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_adminFeedbackBtnActionPerformed

    private void adminAccountApprovalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminAccountApprovalBtnActionPerformed
        if (mgr.getUserID().equals("JITEN")){
            try {
                ManagerApproval mgrApproval = new ManagerApproval(mgr.getUserID(),mgr.getUserPassword());
                mgrApproval.setVisible(true);
                this.dispose();
                try {
                    Logger.info("AdminHome","Manager " + mgr.getUserID() + " has attempted to view Manager Account Approval page.");
                } catch (IOException ex) {
                    java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                Logger.info("AdminHome","Manager " + mgr.getUserID() + " that did not have admin level access has attempted to view Manager Account Approval page.");
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Page requires admin level access.");
        }
    }//GEN-LAST:event_adminAccountApprovalBtnActionPerformed

    private void adminAuditLogBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminAuditLogBtnActionPerformed
        if (mgr.getUserID().equals("JITEN")){
            try {
                ManagerAuditLog mgrAuditLog  = new ManagerAuditLog (mgr.getUserID(), mgr.getUserPassword());
                mgrAuditLog.setVisible(true);
                this.dispose();
                try {
                    Logger.info("AdminHome","Manager " + mgr.getUserID() + " has attempted to view Manager Audit Log page.");
                } catch (IOException ex) {
                    java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else{
            try {
                Logger.info("AdminHome","Manager " + mgr.getUserID() + " that did not have admin level access has attempted to view Manager Account Approval page.");
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Page requires admin level access.");
        }
    }//GEN-LAST:event_adminAuditLogBtnActionPerformed

    private void adminLogoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminLogoutBtnActionPerformed
        WelcomePage mgrLogout = new WelcomePage();
        mgrLogout.setVisible(true);
        this.dispose();
        try {
            Logger.info("AdminHome","Manager " + mgr.getUserID() + " has logout and attempted to view Welcome page.");
        } catch (IOException ex) {
            java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_adminLogoutBtnActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adminAccountApprovalBtn;
    private javax.swing.JButton adminAuditLogBtn;
    private javax.swing.JButton adminFeedbackBtn;
    private javax.swing.JLabel adminHomeHeader;
    private javax.swing.JButton adminLogoutBtn;
    private javax.swing.JButton adminManageOrderBtn;
    private javax.swing.JButton adminOrderHistoryBtn;
    private javax.swing.JButton adminProfileBtn;
    private javax.swing.JButton adminSalesReportBtn;
    private javax.swing.JButton adminUpdateMenuBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel userDisplayLabel1;
    private javax.swing.JLabel userIDTF;
    // End of variables declaration//GEN-END:variables
}
